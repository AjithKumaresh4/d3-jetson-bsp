---
title: D3 Jetson BSP v@D3_JETSON_BSP_VERSION@ Release Notes
<!-- author: \href{mailto:growe@d3engineering.com}{Greg Rowe} -->
linkcolor: black
toc: true
toc-title: \empty
toc-own-page: true
listings-no-page-break: true
titlepage: true
header-includes: |
 \usepackage{booktabs}
 \usepackage{graphicx}
 \usepackage{textcomp}
 \usepackage[table]{xcolor}
 \usepackage{graphicx}
 \usepackage{caption}
 \usepackage{titling}
 \usepackage{transparent}
 \usepackage{draftwatermark}
 \renewcommand{\thempfootnote}{\arabic{mpfootnote}}
 \SetWatermarkAngle{0}
 \SetWatermarkScale{4}
 \SetWatermarkText{\transparent{0.15}\includegraphics[height=50pt]{img/d3_logo}}

 \usepackage{pifont,mdframed}
 \newenvironment{warning}
  {\par\begin{mdframed}[linewidth=2pt,linecolor=red]%
    \begin{list}{}{\leftmargin=1cm
                   \labelwidth=\leftmargin}\item[\Large\ding{43}]}
  {\end{list}\end{mdframed}\par}
 \newenvironment{notice}
  {\par\begin{mdframed}[linewidth=2pt,linecolor=black]%
    \begin{list}{}{\leftmargin=1cm
                   \labelwidth=\leftmargin}\item[\ding{43}]}
  {\end{list}\end{mdframed}\par}
---
\lstset{
    numbers=left,
    numberstyle=\scriptsize,
    tabsize=5,
    language=sh,
    basicstyle=\scriptsize,
    upquote=true,
    aboveskip={1.5\baselineskip},
    columns=fixed,
    showstringspaces=false,
    extendedchars=true,
    breaklines=true,
    prebreak = \raisebox{0ex}[0ex][0ex]{\ensuremath{\hookleftarrow}},
    frame=single,
    showtabs=false,
    showspaces=false,
    showstringspaces=false,
    identifierstyle=\ttfamily,
}

\makeatletter
\renewcommand{\fps@figure}{!ht}
\renewcommand{\fps@table}{!ht}
\makeatother

\newcommand{\imx}{D3CM-IMX390}
\newcommand{\imxrcm}{D3RCM-IMX390-953}
\newcommand{\ov}{D3RCM-OV10640-953}
\newcommand{\nvidia}{NVIDIA\textregistered{} }
\newcommand{\nvjetson}{JETSON\texttrademark{} }
\newcommand{\nvxavier}{AGX XAVIER\texttrademark{} }

\newcommand{\fpdlink}{FPD-LINK\texttrademark{} III }
\newcommand{\designcore}{DesignCore\textregistered{} }

\newcommand{\rspnamelong}{\designcore{} RSP-TX2 Development Kit - \fpdlink{} }
\newcommand{\rspnameshort}{RSP-TX2 Development Kit - \fpdlink }

\newcommand{\cicnamelong}{\designcore \nvidia Jetson SerDes Interface Card }
\newcommand{\cicnameshort}{Jetson SerDes Interface Card }

\newcommand{\dbloctonamelong}{\designcore \nvidia \nvjetson \nvxavier \fpdlink INTERFACE CARD  }
\newcommand{\dbloctonameshort}{\nvidia \nvjetson \nvxavier \fpdlink INTERFACE CARD }


\listoffigures
\listoftables

# D3 Jetson BSP v@D3_JETSON_BSP_VERSION@

This is a maintenance release that corrects an image quality problem
with OV10640 cameras.


# Major Changes

## Major Changes @D3_JETSON_BSP_VERSION@

* OV10640: HDR support disabled until quality issues can be solved

* OV10640: reverted to 1.3.1 tuning for better linear mode quality

## Major Changes 1.3.2

* IMX390: improved HDR support

* OV10640: improved HDR support

* OV10640: fixed incorrect exposure time control

* Xavier: fixed lockups on warm boots with OV10640

* frame sync: \rspnameshort now supports frame synchronization


## Major Changes 1.3.1

* Adds libnvodm_imager.so from Nvidia to correct the sensor-id
  assignment issue.

## Major Changes 1.3.0

* There are no restrictions on camera ports for \rspnameshort
  kits. Any number of cameras may be connected using any available
  port. (Note: for \cicnameshort you must connect a single camera to J6).

* The base system is upgraded to Ubuntu 18.04 (since 1.0.0). Earlier
  releases were based on Ubuntu 16.04.

* There is no longer a default username and password. The user account
  is created when you first start the system after installing \nvidia
  JetPack 4.2.

* D3 recommends the use of the `argus_camera` application that is
  available from the tegra_multimedia_api package that can be
  installed from \nvidia JetPack installer. The application has full
  source code and is easy to use for testing and evaluating
  cameras. See the \hyperlink{argus-camera-installation}{installation section}
  for instructions on building and installing `argus_camera`.

* An experimental patch for publishing the offset of the timestamp for
  frames vs. the system clock in included. See
  \hyperlink{timestamp-patch}{here} for more details.

* A patch is included that corrects an \nvidia issue related to
  sensor-id assignments.

* A patch is included that corrects an \nvidia issue related to PWL
  decompression for HDR camera modes.

* The "warm boot" camera detection issue has been corrected. Cameras
  are detected on \fpdlink based systems from cold boot and from warm
  boot.

* OV10640: HDR mode added (see \hyperlink{nvgst-known-issue}{known issues})

* OV10640: supports multiple modes (linear and HDR)

* IMX390: HDR mode added

* IMX390: supports multiple modes with the restriction that the mode
  must not be changed at run-time. To switch modes a system restart is
  required.


# Supported Hardware

This release supports the following hardware combinations.

\begin{table}[]
\begin{minipage}{\textwidth}
\centering
\caption{Supported Hardware Combinations}
\label{tab:supported-camera-modules}
\resizebox{\textwidth}{!}{%
\begin{tabular}{@{}lll@{}}
\toprule

Hardware Combination & OV10640 & IMX390 \\

\midrule

\rspnamelong \\ (SKU: 1000878) & 6 & 6  \\

\nvidia \nvxavier Developer Kit with \dbloctonamelong \\ (SKU: 1000971)
&  4\footnotemark[1] & 4\footnotemark[1] \\

\nvidia \nvxavier Developer Kit with \cicnamelong \\ (SKU: 1000800)
&  1\footnotemark[2] & 1\footnotemark[2] \\

NVIDIA Tx2 Developer Kit with \cicnamelong \\ (SKU: 1000800)
&  1\footnotemark[2] & 1\footnotemark[2] \\

\bottomrule
\end{tabular}%
}
\footnotetext[1]{Future software releases will support up to 16 FPDLink-III cameras.}
\footnotetext[2]{Future software releases will support up to 4 FPDLink-III cameras.}
\end{minipage}
\end{table}


\begin{table}[]
\centering
\caption{Supported Camera Modules}
\label{tab:supported-camera-modules}
\resizebox{\textwidth}{!}{%
\begin{tabular}{@{}lll@{}}
\toprule
Model & Image Sensor & SKU \\ \midrule
\designcore \imx & SONY\textregistered{} IMX390 & 1000406 \\
\designcore \imxrcm Rugged & SONY\textregistered{} IMX390 & 1000843, 1000844 \\
\designcore \ov Rugged & OmniVision Technologies OV10640 & 1000581, 1000508 \\ \bottomrule
\end{tabular}%
}
\end{table}


\newpage
# Installation

These installation instructions assume 1.0.0 or greater has been
installed on the target system. This section will guide you through
upgrading to @D3_JETSON_BSP_VERSION@.

\begin{warning}

The default Ubuntu image from \nvidia disables installation of
documentation from packages. The first step in the installation is to
re-enable installation of documentation. This is important because D3
installs example scripts in the documentation area; without this step
the example scripts will be missing!

\end{warning}

\begin{notice}

When linux-image-4.9.140+@D3_JETSON_BSP_VERSION@-@CUSTOMER@+\_1\_arm64.deb is installed you will see notices that say things like the following.

\begin{quote}
Hmm. The package shipped with a symbolic link /lib/modules/4.9.140+@D3_JETSON_BSP_VERSION@-@CUSTOMER@+/source
However, I can not read the target: No such file or directory
Therefore, I am deleting /lib/modules/4.9.140+@D3_JETSON_BSP_VERSION@-@CUSTOMER@+/source
\end{quote}

This notice can safely be ignored.

\end{notice}

## DTB File Selection

\begin{warning}

There are different DTB files for different hardware. The correct file
must be chosen. The example below uses the \rspnameshort OV10640 dtb
file. The signed files must be used when using `dd` to program the
device tree. Failure to do so will result in a system that will not
boot.

\end{warning}

\begin{table}[]
\begin{minipage}{\textwidth}
\centering
\caption{DTB File Selection}
\label{tab:dtb-file-selection}
\resizebox{\textwidth}{!}{%
\begin{tabular}{@{}lll@{}}
\toprule

Base System & Camera Type & DTB Filename \\

\midrule

\rspnameshort & \imx & d3-rsp-fpdlink-imx390\_sigheader.dtb.encrypt   \\
\rspnameshort & \imxrcm & d3-rsp-fpdlink-imx390rcm\_sigheader.dtb.encrypt \\
\rspnameshort & \ov & d3-rsp-fpdlink-ov10640\_sigheader.dtb.encrypt \\

\nvxavier Developer Kit with \dbloctonameshort & \imx & d3-xavier-2xocto-imx390\_sigheader.dtb.encrypt \\
\nvxavier Developer Kit with \dbloctonameshort & \imxrcm & d3-xavier-2xocto-imx390rcm\_sigheader.dtb.encrypt \\
\nvxavier Developer Kit with \dbloctonameshort & \ov & d3-xavier-2xocto-ov10640\_sigheader.dtb.encrypt \\

\nvxavier Developer Kit with \cicnameshort & \imx & d3-xavier-ncic-imx390\_sigheader.dtb.encrypt \\
\nvxavier Developer Kit with \cicnameshort & \imxrcm & d3-xavier-ncic-imx390rcm\_sigheader.dtb.encrypt \\
\nvxavier Developer Kit with \cicnameshort & \ov & d3-xavier-ncic-ov10640\_sigheader.dtb.encrypt \\

\nvidia Tx2 Developer Kit with \cicnameshort & \imx & d3-rsp-fpdlink-imx390rcm\_sigheader.dtb.encrypt \\
\nvidia Tx2 Developer Kit with \cicnameshort & \imxrcm & d3-rsp-fpdlink-imx390rcm\_sigheader.dtb.encrypt \\
\nvidia Tx2 Developer Kit with \cicnameshort & \ov & d3-rsp-fpdlink-ov10640\_sigheader.dtb.encrypt \\

\bottomrule
\end{tabular}%
}
\end{minipage}
\end{table}



```sh
# Remove this file or the example scripts will not be included!
sudo rm -f /etc/dpkg/dpkg.cfg.d/excludes

# Install the kernel and D3 supporting tools
sudo dpkg --install \
  linux-image-4.9.140+@D3_JETSON_BSP_VERSION@-@CUSTOMER@+_1_arm64.deb \
  d3-jetson-util_@D3_JETSON_BSP_VERSION@-1_arm64.deb

# Install the correct device tree for your board
sudo dd \
  if=/usr/lib/linux-image-4.9.140+@D3_JETSON_BSP_VERSION@-@CUSTOMER@+/d3-rsp-fpdlink-ov10640_sigheader.dtb.encrypt \
  of=/dev/disk/by-partlabel/kernel-dtb

# Restart the system
sudo reboot
```

\begin{notice}

\begin{itemize}
  \item The kernel version reported by `uname -a` will not change until the
  system is restarted.

  \item The build ids in the kernel and device tree will not change until
  the system is restarted.
\end{itemize}


\end{notice}

To verify that the kernel is correct run `uname -a`. You should see
output similar to the following. The timestamp in
this document may not match your output. The important thing to verify
is that the version is @D3_JETSON_BSP_VERSION@-@CUSTOMER@.


```sh
uname -a
Linux NVIDIA-desktop 4.9.140+@D3_JETSON_BSP_VERSION@-@CUSTOMER@+ #1 SMP PREEMPT Wed Jun 19 10:15:08 EDT 2019 aarch64 aarch64 aarch64 GNU/Linux
```


To verify that the dtb is correct look at
`/proc/device-tree/nvidia,dtsfilename`. You should see
`d3-rsp-fpdlink-ov10640.dts` on your baseboard. You can also verify
the build time of the device tree. The build time in this document may
not match the build time you see.

\begin{notice}

The build time file is `nvidia,dtbbuildtime`. It is not
`nvidia,dtsbuildtime`.

\end{notice}


```sh
cat /proc/device-tree/nvidia,dtsfilename
arch/arm64/boot/dts/../../../../../../hardware/d3/d3-rsp-fpdlink-ov10640.dts
cat /proc/device-tree/nvidia,dtbbuildtime
Jun 18 201911:58:39
```


As a optional step you can verify that the build id for the device
tree matches the build id for the kernel. This indicates that the
device tree and kernel were built from the same code base at the same
time. A new build id is generated for every build that D3 makes.

The build id for the kernel should match the build id for the device
tree.


\begin{notice}
The build ids in this document may not match the build ids on your
system.
\end{notice}



```sh
# The kernel build id
cat /sys/module/build_id/version
e2080b9d-68d4-4d37-a906-02cc1491bd39

# The device tree build id
cat /proc/device-tree/d3,jetson-bsp-build-id
e2080b9d-68d4-4d37-a906-02cc1491bd39
```


To verify that the cameras are operational attach 6 cameras and then
test each individually (see \hyperlink{nvgst-known-issue}{known issue}
regarding HDR problems with nvgstcapture).

You can also use `argus_camera` and cycle through each camera at
run-time. See the argus_camera \hyperlink{argus-camera-installation}{installation section}.

```sh
# N is 0 to 5
nvgstcapture --sensor-id $N
```

An example script for viewing all cameras simultaneously is located in
`/usr/share/doc/d3-jetson-util/examples`

## Connecting Cameras

\begin{figure}[h]
\caption{\cicnamelong}
\centering
\includegraphics[width=0.5\textwidth]{img/d3-cic-key-points.png}
\end{figure}

 * Connect the camera module to jumper J6, circled.

 * Supply 12 volts to the barrel connector or screw terminals, circled.

 * Jumpers J13 and J14 should be set in-board as pictured. (see arrow)

\begin{figure}[h]
\caption{\dbloctonamelong}
\centering
\includegraphics[width=0.5\textwidth]{img/d3-2xocto-key-points.png}
\end{figure}

 * Connect camera modules to Sensor 1, Sensor 5, Sensor 9, and Sensor
   13, circled.

 * Supply 12 volts to the barrel connector. (see arrow)

# Configuration and Use

From v1.0.0 and forward it is no longer necessary to use different
device trees for different numbers and types of cameras. Using a
single device tree 0 to 6 cameras may be used with only a reboot
needed for reconfiguration.

It is not necessary to use different device trees for RGB vs. RCB
camera modules. It is only necessary to change symbolic links so that
argus daemon loads the desired ISP overrides file.

## ISP Configuration

The ISP override files are installed as part of
`d3-jetson-util_@D3_JETSON_BSP_VERSION@-1_arm64.deb`. The ISP override
files are located at `/var/NVIDIA/nvcam/settings`.

To configure the system to use a different ISP override file you must
change the correct symbolic link. Use the table below as a reference.

\begin{notice}

This example is for OV10640 camera modules. If you are using IMX390
change the Badge Name suffix to imx390.

\end{notice}


\begin{table}[]
\centering
\caption{Camera to Badge Name Mapping}
\label{tab:camera-to-badge-name-mapping}
\resizebox{0.5\textwidth}{!}{%
\begin{tabular}{@{}cr@{}}
\toprule
D3 Camera Connector & Badge Name \\

\midrule
J2 & d3\_bottomleft\_ov10640 \\
J3 & d3\_centerleft\_ov10640 \\
J4 & d3\_centerright\_ov10640 \\
J5 & d3\_topleft\_ov10640 \\
J6 & d3\_bottomright\_ov10640 \\
J7 & d3\_topright\_ov10640 \\

\bottomrule
\end{tabular}%
}
\end{table}


## Installing Argus Camera Application

\hypertarget{argus-camera-installation}{\empty} The `argus_camera`
application is provided as a sample application from \nvidia as part
of the `tegra_multimedia_api` package. The source code for this
application is provided along with other examples. This is an
excellent starting point for developing `libargus` based
applications. This package is not installed by default.

This application is not required. It is, however, highly educational
and a great tool for testing cameras.

Use the SDK Manager to install the `Jetson SDK components`. Be sure to
*un-check* Jetson OS! If you forget to un-check this option you must
re-install all D3 provided software.

![SDK Installer](img/sdk-installer.png "SDK Manager Installer")

\newpage

After the SDK components have been installed on the \nvjetson perform
the following steps to build and install `argus_camera` and related
utilities.


```sh
cp -r /usr/src/tegra_multimedia_api .
sudo apt-get -y install \
	 cmake \
	 build-essential \
	 pkg-config \
	 libx11-dev \
	 libgtk-3-dev \
	 libexpat1-dev \
	 libjpeg-dev \
	 libgstreamer1.0-dev \
	 gcc-6
cd tegra_multimedia_api/argus
mkdir build
cd build
cmake ..
make -j6
sudo make install
```

You can start the application by opening a terminal window and executing:

```sh
argus_camera&
```

## D3CM-IMX390

This release includes four sensor modes for SONY\textregistered{}
IMX390.

\begin{warning}
Switching of modes at run-time is not currently supported.
\end{warning}


\begin{table}[]
\begin{minipage}{\textwidth}
\centering
\caption{IMX390 Sensor Modes}
\label{tab:supported-camera-modules}
\resizebox{\textwidth}{!}{%
\begin{tabular}{@{}ccccl@{}}
\toprule

Sensor Mode ID &  Resolution &  Bit Depth & Frame Rate & Description\\

\midrule

0  & 1936x1100 & 20 & 60 & Preliminary HDR mode \\
1  & 1936x1100 & 12 & 30 & Sub-pixel 2 linear mode \\
2  & 1936x1100 & 12 & 30 & Sub-pixel 1H linear mode \\
3  & 1936x1100 & 12 & 30 & Sub-pixel 1L linear mode (recommended) \\

\bottomrule
\end{tabular}%
}
\end{minipage}
\end{table}

Use `argus_camera` to preview different modes. You must restart the
system if you choose to view a different mode with this camera at this
time. While the system may display video the camera will not be
configured properly.

```sh
# View the camera in sub-pixel 1L linear mode
argus_camera --sensormode=3
```


## Frame Synchronization

\rspnamelong now supports synchronized camera inputs for all six
inputs. This feature requires the installation of D3's `d3-camsync`
Debian package.


The version numbers in the example may not be the current
release. Please see D3 for the latest `d3-camsync` release.

```
sudo dpkg --install d3-camsync_1.2.1-1_arm64.deb
sudo dpkg --install d3-camsync-dev_1.2.1-1_arm64.deb
sudo reboot
```

The frame synchronization signal can be controlled by editing
`/etc/d3-camsync/config.lua` and then running `sudo sync.lua` for the
changes to take effect. You do not need to restart the system to
change the synchronization frequency.

```
vi /etc/d3-camsync/config.lua
sudo sync.lua
```

\begin{notice}

The camera module must also support frame synchronization for this
feature to work properly. At this time D3 supports frame
synchronization with \ov

\end{notice}

\ov must be placed in frame sync mode which is sometimes called slave
mode. By default it operates in a free-running mode at 30 frames per
second. You can set this mode using the v4l2 frame_sync_enable control
from your application. This can be set from the command line using the
example below.

```
v4l2-ctl -cframe_sync_enable=1
```


# Timestamp Patch

\hypertarget{timestamp-patch}This release includes an experimental
patch from \nvidia that publishes the offset of the clock used to
timestamp images vs. the system clock. The sysfs file
`/sys/devices/system/clocksource/clocksource0/offset_ns` contains the
offset. You can view this offset from the shell or integrate it into
your programs using ordinary file io operations.

```sh
cat /sys/devices/system/clocksource/clocksource0/offset_ns
13785257728
```

To use this feature subtract the offset from the timestamp contained
in the image. In pseudo code:

```c
image_timestamp_ns - offset_ns = system_timestamp;
```


# Sensor IDs

The sensor-id value, which is needed to identify cameras in software,
is assigned at run-time. The sensor-id can be determined based on the
number of cameras connected to the system and the ports they are
connected to. The sensor-id starts at 0 and increments for each camera
detected. The zeroth sensor-id is assigned to the camera on the lowest
numbered port. For example a camera connected to J2 will always have
sensor-id 0.

If the system is started with two cameras connected, one on J3 (the
second port) and another on J5 then the J3 camera would have sensor-id
0 and the J5 camera would have sensor-id 1.

# Known Issues

* \hypertarget{nvgst-known-issue}{\empty}`nvgstcapture` and
  `nvarguscamerasrc` have no mechanism for choosing the
  sensor-mode. They appear to always use the last sensor mode. The
  `argus_camera` tool can be used with `--sensormode=$N` where $N is
  the sensor mode number.

* On \nvxavier stopping and starting of a video stream will not work. The
  system must be restarted.

* The IMX390 driver does not support run-time sensor mode switching.

* In HDR mode with IMX390 green artifacts can be seen in low-light
  conditions.


